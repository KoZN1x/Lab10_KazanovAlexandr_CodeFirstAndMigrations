// <auto-generated />
using Lab10_KazanovAlexandr_CodeFirst.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab10_KazanovAlexandr_CodeFirst.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab10_KazanovAlexandr_CodeFirst.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("Age")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    b.HasKey("Id")
                        .HasName("Player_PK");

                    b.HasIndex("TeamId");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("Lab10_KazanovAlexandr_CodeFirst.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int")
                        .HasColumnName("TrainerID");

                    b.HasKey("Id")
                        .HasName("Team_PK");

                    b.HasIndex("TrainerId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("Lab10_KazanovAlexandr_CodeFirst.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("Trainer_PK");

                    b.ToTable("Trainer");
                });

            modelBuilder.Entity("Lab10_KazanovAlexandr_CodeFirst.Models.Player", b =>
                {
                    b.HasOne("Lab10_KazanovAlexandr_CodeFirst.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Player_Team");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Lab10_KazanovAlexandr_CodeFirst.Models.Team", b =>
                {
                    b.HasOne("Lab10_KazanovAlexandr_CodeFirst.Models.Trainer", "Trainer")
                        .WithMany("Teams")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Team_Trainer");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Lab10_KazanovAlexandr_CodeFirst.Models.Team", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("Lab10_KazanovAlexandr_CodeFirst.Models.Trainer", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
